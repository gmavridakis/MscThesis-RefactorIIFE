// Press ctrl+space for code completion
export default function transformer(file, api) {
  const j = api.jscodeshift;
  
   const isIIFEVariations = function(IIFEDeclarationNode){
    /* Void Variation */
    let void_case = IIFEDeclarationNode.value.expression;
    if( void_case.type == 'UnaryExpression' && void_case.operator == 'void'){
        if(void_case.argument.callee){
        	return void_case.argument.callee
        }
    }
   };
  
  return (
    j(file.source)
            .find(j.ExpressionStatement)
            .filter(isIIFEVariations)
            .forEach(IIFEDeclarationNode => {
              	let _astNode = IIFEDeclarationNode.value.expression.callee;
            })
    		.replaceWith('Here there was a void declaration') 
  )
  .toSource();
}
